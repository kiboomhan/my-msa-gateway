# Use root/example as user/password credentials
# https://github.com/confluentinc/training-administration-src/blob/master/docker-compose.yml
version: '3.8'

networks:
  msa-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
          gateway: 172.21.0.1
  data-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

volumes:
  db-data:

services:

  ########################################################################################################## KAFKA
  zookeeper-1:
    image: confluentinc/cp-zookeeper:6.2.0
#    hostname: zookeeper
    container_name: zookeeper-1
    ports:
      - "12181:12181"
    networks:
      data-net:
        ipv4_address: 172.20.10.10
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 12181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888
  zookeeper-2:
    image: confluentinc/cp-zookeeper:6.2.0
#    hostname: zookeeper
    container_name: zookeeper-2
    ports:
      - "22181:22181"
    networks:
      data-net:
        ipv4_address: 172.20.10.20
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888

  broker-1:
    image: confluentinc/cp-kafka:6.2.0
#    hostname: broker-1
    container_name: broker-1
    ports:
      - "19092:19092"
#      - "29091:29091"
#      - "9101:9101"
    networks:
      data-net:
        ipv4_address: 172.20.20.10
      msa-net:
    depends_on:
      - zookeeper-1
      - zookeeper-2
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:12181,zookeeper-2:22181
      KAFKA_LISTENERS: DOCKER://broker-1:9092,HOST://broker-1:19092
      KAFKA_ADVERTISED_LISTENERS: DOCKER://broker-1:9092,HOST://broker-1:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER:PLAINTEXT,HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
#      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_JMX_OPTS: -Dlog4j.logger.org.apache.kafka.common.network.Selector=ERROR
        -Dcom.sun.management.jmxremote=true
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false
        -Djava.rmi.server.hostname=kafka.myserver.com
        -Dcom.sun.management.jmxremote.rmi.port=9101
        -Djava.net.preferIPv4Stack=true

  broker-2:
    image: confluentinc/cp-kafka:6.2.0
#    hostname: broker-2
    container_name: broker-2
    ports:
      - "29092:29092"
#      - "29092:29092"
#      - "9102:9102"
    networks:
      data-net:
        ipv4_address: 172.20.20.20
      msa-net:
    depends_on:
      - zookeeper-1
      - zookeeper-2
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:12181,zookeeper-2:22181
      KAFKA_LISTENERS: DOCKER://broker-2:9092,HOST://broker-2:29092
      KAFKA_ADVERTISED_LISTENERS: DOCKER://broker-2:9092,HOST://broker-2:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER:PLAINTEXT,HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9102
      #      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_JMX_OPTS: -Dlog4j.logger.org.apache.kafka.common.network.Selector=ERROR
        -Dcom.sun.management.jmxremote=true
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false
        -Djava.rmi.server.hostname=kafka.myserver.com
        -Dcom.sun.management.jmxremote.rmi.port=9101
        -Djava.net.preferIPv4Stack=true

  broker-3:
    image: confluentinc/cp-kafka:6.2.0
#    hostname: broker-3
    container_name: broker-3
    ports:
      - "39092:39092"
#      - "29093:29093"
#      - "9103:9103"
    networks:
      data-net:
        ipv4_address: 172.20.20.30
      msa-net:
    depends_on:
      - zookeeper-1
      - zookeeper-2
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:12181,zookeeper-2:22181
      KAFKA_LISTENERS: DOCKER://broker-3:9092,HOST://broker-3:39092
      KAFKA_ADVERTISED_LISTENERS: DOCKER://broker-3:9092,HOST://broker-3:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER:PLAINTEXT,HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9103
      #      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_JMX_OPTS: -Dlog4j.logger.org.apache.kafka.common.network.Selector=ERROR
        -Dcom.sun.management.jmxremote=true
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false
        -Djava.rmi.server.hostname=kafka.myserver.com
        -Dcom.sun.management.jmxremote.rmi.port=9101
        -Djava.net.preferIPv4Stack=true

  kafka-connect:
    image: confluentinc/cp-kafka-connect-base:latest
    container_name: kafka-connect
    ports:
      - "8083:8083"
    networks:
      data-net:
        ipv4_address: 172.20.30.10
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - broker-1
      - broker-2
      - broker-3
    environment:
      CONNECT_BOOTSTRAP_SERVERS: broker-1:9092,broker-2:9092,broker-3:9092
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: "my-msa-connect"
      CONNECT_CONFIG_STORAGE_TOPIC: "my-msa-connect-config"
      CONNECT_OFFSET_STORAGE_TOPIC: "my-msa-connect-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "my-msa-connect-status"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
#      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://localhost:8081"
#      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://localhost:8081"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "host.docker.internal"
      CONNECT_ZOOKEEPER_CONNECT: zookeeper-1:12181,zookeeper-2:22181
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
#      CONNECT_PLUGIN_PATH: /usr/share/java,/etc/kafka-connect/jars
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components
    volumes:
      - ./kafka-connect/etckafka-connectjars:/etc/kafka-connect/jars
      - ./kafka-connect/usrshareconfluent-hub-components:/usr/share/confluent-hub-components
    command:
      - bash
      - -c
      - |
        echo "Installing Connector"
        confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:10.2.2
        /etc/confluent/docker/run

  kafka-manager:
#    image:   deltaprojects/kafka-manager:latest
#    container_name: kafka-manager
#    ports:
#      - "9000:9000"
#    environment:
#      KAFKA_MANAGER_AUTH_ENABLED: true # default value
#      KAFKA_MANAGER_USERNAME: admin # default value
#      KAFKA_MANAGER_PASSWORD: test1234 # default value
#      KAFKA_MANAGER_LDAP_ENABLED: false
#      KAFKA_MANAGER_EXTRA_PLAY_OPTS: ""
    image: hlebalbau/kafka-manager:stable
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: zookeeper-1:12181,zookeeper-2:22181
      APPLICATION_SECRET: "random-secret"
      KAFKA_MANAGER_AUTH_ENABLED: "true"
      KAFKA_MANAGER_USERNAME: admin
      KAFKA_MANAGER_PASSWORD: test1234


  ########################################################################################################## LOG
  # The zipkin process services the UI, and also exposes a POST endpoint that
  # instrumentation can send trace data to. Scribe is disabled by default.
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
#    environment:
#      - STORAGE_TYPE=mysql
      # Point the zipkin at the storage backend
#      - MYSQL_HOST=mysql
      # Uncomment to enable scribe
      # - SCRIBE_ENABLED=true
      # Uncomment to enable self-tracing
      # - SELF_TRACING_ENABLED=true
      # Uncomment to enable debug logging
      # - JAVA_OPTS=-Dlogging.level.zipkin2=DEBUG
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - "9411:9411"
      # Uncomment if you set SCRIBE_ENABLED=true
      # - 9410:9410
#    depends_on:
#      - storage
    networks:
      - msa-net

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - msa-net

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    networks:
      - msa-net


  ########################################################################################################## APPS
  db:
    container_name: msa-mariadb
    image: mariadb
    networks:
      - msa-net
    #    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: test1234
      MYSQL_DATABASE: my_db
    volumes:
      - db-data:/var/lib/mysql
      - ./msaapporder-mariadb/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    #    expose:
    #      - 3306

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.9-management
    ports:
      - "5672:5672"
      - "15672:15672"
      - "5671:5671"
      - "15671:15671"
      - "4369:4369"
    networks:
      - msa-net
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ-DEFAULT_PASS=guest

  msa-config:
    container_name: msa-config
    image: kiboomhan/msa-config
    ports:
      - "8888:8888"
    networks:
      - msa-net
    environment:
      JAVA_TOOL_OPTIONS: -Dspring.rabbitmq.host=rabbitmq
        -Dspring.prorfiles.active=default
        -Dencrypt.key-store.location=file:/common/keystore/my-msa-config-private.jks
    volumes:
      - ./common/keystore:/common/keystore
    depends_on:
      - rabbitmq

  msa-service-discovery:
    container_name: msa-service-discovery
    image: kiboomhan/msa-service-discovery
    ports:
      - "8761:8761"
    networks:
      - msa-net
    environment:
      JAVA_TOOL_OPTIONS: -Dspring.rabbitmq.host=rabbitmq
        -Dspring.prorfiles.active=default
        -Dspring.config.import=optional:configserver:http://msa-config:8888
    depends_on:
      - rabbitmq
      - msa-config

  msa-gateway:
    container_name: msa-gateway
    image: kiboomhan/msa-gateway
    ports:
      - "8000:8000"
    networks:
      - msa-net
    environment:
      JAVA_TOOL_OPTIONS: -Dspring.rabbitmq.host=rabbitmq
        -Dspring.prorfiles.active=dev
        -Dspring.config.import=optional:configserver:http://msa-config:8888
        -Deureka.client.serviceUrl.defaultZone=http://msa-service-discovery:8761/eureka
        -Dlogging.level.root=DEBUG
    depends_on:
      - rabbitmq
      - msa-config
      - msa-service-discovery

  msa-app-user:
    container_name: msa-app-user
    image: kiboomhan/msa-app-user
#    ports:
#      - "8000:8000"
    networks:
      - msa-net
    environment:
      JAVA_TOOL_OPTIONS: -Dspring.rabbitmq.host=rabbitmq
        -Dspring.prorfiles.active=dev
        -Dspring.config.import=optional:configserver:http://msa-config:8888
        -Deureka.client.serviceUrl.defaultZone=http://msa-service-discovery:8761/eureka
        -Dspring.zipkin.base-url=http://zipkin:9411
    depends_on:
      - rabbitmq
      - msa-config
      - msa-service-discovery

  msa-app-order:
    container_name: msa-app-order
    image: kiboomhan/msa-app-order
    #    ports:
    #      - "8000:8000"
    networks:
      - msa-net
      - data-net
    environment:
      JAVA_TOOL_OPTIONS: -Dspring.rabbitmq.host=rabbitmq
        -Dspring.prorfiles.active=dev
        -Dspring.config.import=optional:configserver:http://msa-config:8888
        -Deureka.client.serviceUrl.defaultZone=http://msa-service-discovery:8761/eureka
        -Dspring.datasource.url=jdbc:mariadb://msa-mariadb:3306/my_db
        -Dspring.zipkin.base-url=http://zipkin:9411
    depends_on:
      - rabbitmq
      - msa-config
      - msa-service-discovery
      - msa-mariadb

  msa-app-catalog:
    container_name: msa-app-catalog
    image: kiboomhan/msa-app-catalog
    #    ports:
    #      - "8000:8000"
    networks:
      - msa-net
      - data-net
    environment:
      JAVA_TOOL_OPTIONS: -Dspring.rabbitmq.host=rabbitmq
        -Dspring.prorfiles.active=dev
        -Dspring.config.import=optional:configserver:http://msa-config:8888
        -Deureka.client.serviceUrl.defaultZone=http://msa-service-discovery:8761/eureka
    depends_on:
      - rabbitmq
      - msa-config
      - msa-service-discovery